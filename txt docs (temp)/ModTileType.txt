public override bool CanPlace(int x, int y) { return true; } //if can place in this spot
public override void PlaceTile(int x, int y) { } // on moment of placement
public override bool PreKill(int x, int y, bool fail, bool effectsOnly, bool noItem) { return true; }
public override void Kill(int x, int y, bool fail, bool effectsOnly, bool noItem) { }
public override void PostKill(int x, int y, bool fail, bool effectsOnly, bool noItem) { }

public override bool TileFrame(int x, int y) { return false; } // return true to... well, return
public override void TileFrameCounter(){ } // only called on global tiles, used to change tile frames using TileDef.frame and TileDef.frameCounter

public override bool MouseOver(int x, int y, SpriteBatch sb) { return false; } // mouseover effect; icon to draw or whatever
public override bool RightClick(int x, int y) { return false; } // on right click while in range, etc. etc. return true to confirm click interception

public override void HitWire(int x, int y, int wireType) { } // when activated by wire

public override void ModifyLight(int x, int y, ref float r, ref float g, ref float b) { } // yep

public override bool PreDrawType(SpriteBatch sb, bool solidTiles, int x, int y) { return true; } // called before this tile type draws
public override void PostDrawType(SpriteBatch sb, bool solidTiles, int x, int y) { } // called after this tile type draws

public override bool PreDrawWall(SpriteBatch sb, int x, int y, int wallType) { return true; } // if in draw range, draws before all walls
public override void PostDrawWall(SpriteBatch sb, int x, int y, int wallType) { } // and after all walls